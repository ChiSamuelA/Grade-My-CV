name: CI

on:
  push:
    branches: [ master ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install:
    name: Install deps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      - run: npm ci

  typecheck:
    name: Typecheck
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      - run: npm ci
      - run: npm run typecheck

  build:
    name: Build
    needs: typecheck
    runs-on: ubuntu-latest
    outputs:
      out_client: ${{ steps.detect.outputs.out_client }}
      out_server: ${{ steps.detect.outputs.out_server }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      - run: npm ci
      - name: Build project
        run: npm run build

      # ðŸ‘‡ Detect where the build actually went
      - name: Detect build output
        id: detect
        shell: bash
        run: |
          echo "Listing workspace:"
          ls -la
          echo "Listing build tree (if any):"
          [ -d build ] && ls -la build || true
          [ -d dist ] && ls -la dist || true

          OUT_CLIENT=""
          OUT_SERVER=""

          if [ -d "build/client" ]; then
            OUT_CLIENT="build/client"
          elif [ -d "dist" ]; then
            OUT_CLIENT="dist"
          elif [ -d "build" ]; then
            # fallback: upload whole build dir
            OUT_CLIENT="build"
          fi

          if [ -d "build/server" ]; then
            OUT_SERVER="build/server"
          fi

          echo "Detected client out: $OUT_CLIENT"
          echo "Detected server out: $OUT_SERVER"

          echo "out_client=$OUT_CLIENT" >> "$GITHUB_OUTPUT"
          echo "out_server=$OUT_SERVER" >> "$GITHUB_OUTPUT"

  upload:
    name: Upload artifacts
    needs: build
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Upload client bundle (if present)
        if: ${{ needs.build.outputs.out_client != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.build.outputs.out_client == 'dist' && 'dist' || 'build-client' }}
          path: ${{ needs.build.outputs.out_client }}
          if-no-files-found: error
          retention-days: 7

      - name: Upload server bundle (if present)
        if: ${{ needs.build.outputs.out_server != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: build-server
          path: ${{ needs.build.outputs.out_server }}
          if-no-files-found: error
          retention-days: 7
